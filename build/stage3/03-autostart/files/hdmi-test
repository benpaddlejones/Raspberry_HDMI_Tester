#!/bin/bash
# HDMI Integration Test Script
# This script mimics what the systemd services will run in the final solution
# Runs both image display and audio playback together

set -e

echo "========================================="
echo "HDMI Integration Test"
echo "========================================="
echo "This script runs both image and audio tests together"
echo "This is what will run automatically in the final solution"
echo ""
echo "Timestamp: $(date)"
echo ""

# Check if running as root for image display
if [ "$(id -u)" -ne 0 ]; then
    echo "‚ö†Ô∏è  WARNING: Not running as root."
    echo "   Image display may fail without framebuffer access."
    echo "   Recommendation: Run as root: sudo hdmi-test"
    echo ""
    read -p "Continue anyway? (y/N) " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi
    echo ""
fi

# Check if scripts exist
echo "üîç Checking for test scripts..."
if [ ! -x /usr/local/bin/hdmi-image ]; then
    echo "‚ùå ERROR: hdmi-image script not found or not executable"
    exit 1
fi
echo "‚úì hdmi-image found"

if [ ! -x /usr/local/bin/hdmi-audio ]; then
    echo "‚ùå ERROR: hdmi-audio script not found or not executable"
    exit 1
fi
echo "‚úì hdmi-audio found"
echo ""

# Create cleanup function
cleanup() {
    echo ""
    echo "========================================="
    echo "üõë Stopping HDMI test..."
    echo "========================================="

    if [ -n "$IMAGE_PID" ] && kill -0 "$IMAGE_PID" 2>/dev/null; then
        echo "Stopping image display (PID: $IMAGE_PID)..."
        kill "$IMAGE_PID" 2>/dev/null || true
        wait "$IMAGE_PID" 2>/dev/null || true
    fi

    if [ -n "$AUDIO_PID" ] && kill -0 "$AUDIO_PID" 2>/dev/null; then
        echo "Stopping audio playback (PID: $AUDIO_PID)..."
        kill "$AUDIO_PID" 2>/dev/null || true
        wait "$AUDIO_PID" 2>/dev/null || true
    fi

    echo "‚úÖ HDMI test stopped"
    exit 0
}

# Set trap for cleanup
trap cleanup SIGINT SIGTERM EXIT

echo "========================================="
echo "üöÄ Starting HDMI Integration Test"
echo "========================================="
echo ""

# Start image display in background
echo "‚ñ∂Ô∏è  Starting image display..."
/usr/local/bin/hdmi-image > /tmp/hdmi-image.log 2>&1 &
IMAGE_PID=$!
echo "   Image display running in background (PID: $IMAGE_PID)"
echo "   Log: /tmp/hdmi-image.log"

# Give image display time to initialize
sleep 2

# Check if image display is still running
if ! kill -0 "$IMAGE_PID" 2>/dev/null; then
    echo ""
    echo "‚ùå ERROR: Image display failed to start"
    echo ""
    echo "--- Image Display Log ---"
    cat /tmp/hdmi-image.log
    echo ""
    exit 1
fi
echo "‚úì Image display started successfully"
echo ""

# Start audio playback in background
echo "‚ñ∂Ô∏è  Starting audio playback..."
/usr/local/bin/hdmi-audio > /tmp/hdmi-audio.log 2>&1 &
AUDIO_PID=$!
echo "   Audio playback running in background (PID: $AUDIO_PID)"
echo "   Log: /tmp/hdmi-audio.log"

# Give audio time to initialize
sleep 3

# Check if audio is still running
if ! kill -0 "$AUDIO_PID" 2>/dev/null; then
    echo ""
    echo "‚ö†Ô∏è  WARNING: Audio playback may have failed"
    echo ""
    echo "--- Audio Playback Log ---"
    cat /tmp/hdmi-audio.log
    echo ""
    echo "Image display is still running. Audio troubleshooting needed."
    echo ""
fi

echo ""
echo "========================================="
echo "‚úÖ HDMI Integration Test Running"
echo "========================================="
echo ""
echo "Status:"
echo "  ‚Ä¢ Image display: PID $IMAGE_PID"
echo "  ‚Ä¢ Audio playback: PID $AUDIO_PID"
echo ""
echo "Logs:"
echo "  ‚Ä¢ Image: tail -f /tmp/hdmi-image.log"
echo "  ‚Ä¢ Audio: tail -f /tmp/hdmi-audio.log"
echo ""
echo "Press Ctrl+C to stop both services"
echo ""
echo "========================================="

# Wait for user interrupt
while true; do
    # Check if processes are still running
    if ! kill -0 "$IMAGE_PID" 2>/dev/null; then
        echo ""
        echo "‚ö†Ô∏è  Image display stopped unexpectedly!"
        cat /tmp/hdmi-image.log
        break
    fi

    if ! kill -0 "$AUDIO_PID" 2>/dev/null; then
        echo ""
        echo "‚ö†Ô∏è  Audio playback stopped unexpectedly!"
        cat /tmp/hdmi-audio.log
        break
    fi

    sleep 5
done

# Cleanup will be called by trap

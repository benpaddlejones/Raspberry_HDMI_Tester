#!/bin/bash
# Audio Test Script: Loop stereo.flac and surround51.flac for HDMI audio testing

STEREO_FILE="/opt/hdmi-tester/stereo.flac"
SURROUND_FILE="/opt/hdmi-tester/surround51.flac"
LOG_FILE="/tmp/audio-test.log"

# Setup unbuffered logging (survives crashes)
exec > >(tee -a "${LOG_FILE}") 2>&1

# Trap handler to ensure logs are flushed on exit/error
cleanup() {
    echo "=== Script terminated at $(date '+%Y-%m-%d %H:%M:%S') (exit code: $?) ==="
    sync  # Flush filesystem buffers
}
trap cleanup EXIT INT TERM

# Log startup info
echo "==========================================="
echo "Audio Test Loop (VLC) - Started $(date '+%Y-%m-%d %H:%M:%S')"
echo "==========================================="
echo "Files:"
echo "  - ${STEREO_FILE}"
echo "  - ${SURROUND_FILE}"
echo "Log: ${LOG_FILE}"
echo "PID: $$"
echo "User: $(whoami)"
echo "Working Directory: $(pwd)"
echo ""

    # System information
    echo "=== System Information ==="
    echo "Hostname: $(hostname)"
    echo "Kernel: $(uname -r)"
    echo "OS: $(cat /etc/os-release 2>/dev/null | grep PRETTY_NAME | cut -d= -f2 | tr -d '\"')"
    echo "Architecture: $(uname -m)"
    echo "CPU: $(cat /proc/cpuinfo | grep "Model" | head -1 | cut -d: -f2 | xargs)"
    echo "CPU Cores: $(nproc)"
    echo "Memory Total: $(free -h | awk '/^Mem:/ {print $2}')"
    echo "Memory Available: $(free -h | awk '/^Mem:/ {print $7}')"
    echo "GPU Memory: $(vcgencmd get_mem gpu 2>/dev/null || echo 'N/A')"
    echo "CPU Temperature: $(vcgencmd measure_temp 2>/dev/null || echo 'N/A')"
    echo "CPU Frequency: $(vcgencmd measure_clock arm 2>/dev/null || echo 'N/A')"
    echo "Uptime: $(uptime -p)"
    echo ""

    # Boot configuration
    echo "=== Boot Configuration ==="
    if [ -f /boot/firmware/config.txt ]; then
        echo "HDMI Config:"
        grep -E "^hdmi_|^gpu_mem" /boot/firmware/config.txt 2>/dev/null || echo "No HDMI config found"
    elif [ -f /boot/config.txt ]; then
        echo "HDMI Config:"
        grep -E "^hdmi_|^gpu_mem" /boot/config.txt 2>/dev/null || echo "No HDMI config found"
    fi
    echo ""

    # Audio devices
    echo "=== Audio Devices ==="
    echo "ALSA Devices:"
    aplay -l 2>&1 || echo "No ALSA devices found"
    echo ""
    echo "Audio Sinks:"
    pactl list sinks short 2>&1 || echo "PulseAudio not available"
    echo ""

    # Check audio files
    echo "=== Audio File Check ==="
    if [ ! -f "${STEREO_FILE}" ]; then
        echo "❌ ERROR: Stereo audio file not found at ${STEREO_FILE}"
        exit 1
    fi
    echo "✓ Stereo FLAC exists: $(ls -lh "${STEREO_FILE}" | awk '{print $5}')"
    echo "  Path: ${STEREO_FILE}"
    echo "  File Details:"
    file "${STEREO_FILE}" 2>&1 | sed 's/^/    /'
    echo "  MD5 Checksum: $(md5sum "${STEREO_FILE}" | cut -d' ' -f1)"
    echo ""

    if [ ! -f "${SURROUND_FILE}" ]; then
        echo "❌ ERROR: Surround audio file not found at ${SURROUND_FILE}"
        exit 1
    fi
    echo "✓ 5.1 Surround FLAC exists: $(ls -lh "${SURROUND_FILE}" | awk '{print $5}')"
    echo "  Path: ${SURROUND_FILE}"
    echo "  File Details:"
    file "${SURROUND_FILE}" 2>&1 | sed 's/^/    /'
    echo "  MD5 Checksum: $(md5sum "${SURROUND_FILE}" | cut -d' ' -f1)"
    echo ""

    echo "Audio Metadata (ffprobe):"
    if command -v ffprobe &> /dev/null; then
        echo "Stereo FLAC:"
        ffprobe -v quiet -show_format -show_streams "${STEREO_FILE}" 2>&1 | head -30 | sed 's/^/  /'
        echo ""
        echo "5.1 Surround FLAC:"
        ffprobe -v quiet -show_format -show_streams "${SURROUND_FILE}" 2>&1 | head -30 | sed 's/^/  /'
    else
        echo "ffprobe not available"
    fi
    echo ""

    # Environment variables
    echo "=== Environment Variables ==="
    echo "DISPLAY=${DISPLAY:-not set}"
    echo "XDG_RUNTIME_DIR=${XDG_RUNTIME_DIR:-not set}"
    echo "TERM=${TERM:-not set}"
    echo "PATH=${PATH}"
    echo ""

    # Check VLC version and capabilities
    echo "=== VLC Version and Capabilities ==="
    cvlc --version 2>&1
    echo ""
    echo "VLC Audio Outputs:"
    cvlc --list | grep -A 50 "aout" 2>&1 | head -60
    echo ""

    # System resources before start
    echo "=== System Resources (Before Start) ==="
    echo "Load Average: $(cat /proc/loadavg)"
    echo "Memory:"
    free -h
    echo ""
    echo "Disk Space:"
    df -h / /boot 2>/dev/null
    echo ""

    # Process information
    echo "=== Process Information ==="
    echo "Running audio processes:"
    ps aux | grep -E "vlc|aplay|paplay" | grep -v grep || echo "None"
    echo ""

    # Detect HDMI audio device dynamically
    echo "=== Detecting HDMI Audio Device ==="
    HDMI_DEVICE=$(/opt/hdmi-tester/detect-hdmi-audio)
    echo "Detected HDMI audio device: ${HDMI_DEVICE}"
    echo ""

    echo "=== Starting VLC Audio Loop (Verbose Mode) ==="
    echo "Command: AUDIODEV=${HDMI_DEVICE} cvlc --loop --no-video --aout=alsa --no-audio-time-stretch --audio-replay-gain-mode=none -vv ${STEREO_FILE} ${SURROUND_FILE}"
    echo "Start Time: $(date '+%Y-%m-%d %H:%M:%S.%N')"
    echo ""
    echo "--- VLC Output Below ---"
    echo ""

    # Run VLC with verbose output (plays both audio files in loop)
    # Use AUDIODEV environment variable to set ALSA device
    export AUDIODEV="${HDMI_DEVICE}"
    exec cvlc --loop --no-video --aout=alsa \
        --no-audio-time-stretch --audio-replay-gain-mode=none -vv \
        "${STEREO_FILE}" "${SURROUND_FILE}" 2>&1

#!/bin/bash
# Test Script 3 (VLC): Play both videos in sequence and loop

IMAGE_VIDEO="/opt/hdmi-tester/image-test.webm"
COLOR_VIDEO="/opt/hdmi-tester/color-test.webm"
LOG_FILE="/tmp/full-test.log"

# Start logging
{
    echo "==========================================="
    echo "Combined Test Loop (VLC) - Started $(date '+%Y-%m-%d %H:%M:%S')"
    echo "==========================================="
    echo "Files:"
    echo "  - ${IMAGE_VIDEO}"
    echo "  - ${COLOR_VIDEO}"
    echo "Log: ${LOG_FILE}"
    echo "PID: $$"
    echo "User: $(whoami)"
    echo "Working Directory: $(pwd)"
    echo ""
    echo "Sequence:"
    echo "  1. Image test (optimized resolution)"
    echo "  2. Color test (fullscreen stretched)"
    echo "  3. Loop forever"
    echo ""
    echo "Press Ctrl+C to stop"
    echo ""

    # System information
    echo "=== System Information ==="
    echo "Hostname: $(hostname)"
    echo "Kernel: $(uname -r)"
    echo "OS: $(cat /etc/os-release 2>/dev/null | grep PRETTY_NAME | cut -d= -f2 | tr -d '\"')"
    echo "Architecture: $(uname -m)"
    echo "CPU: $(cat /proc/cpuinfo | grep "Model" | head -1 | cut -d: -f2 | xargs)"
    echo "CPU Cores: $(nproc)"
    echo "Memory Total: $(free -h | awk '/^Mem:/ {print $2}')"
    echo "Memory Available: $(free -h | awk '/^Mem:/ {print $7}')"
    echo "GPU Memory: $(vcgencmd get_mem gpu 2>/dev/null || echo 'N/A')"
    echo "CPU Temperature: $(vcgencmd measure_temp 2>/dev/null || echo 'N/A')"
    echo ""

    # Check if video files exist
    echo "=== Video File Validation ==="
    if [ ! -f "${IMAGE_VIDEO}" ]; then
        echo "❌ ERROR: Image video not found at ${IMAGE_VIDEO}"
        exit 1
    fi
    echo "✓ Image video exists: $(ls -lh "${IMAGE_VIDEO}" | awk '{print $5}')"
    echo "  MD5: $(md5sum "${IMAGE_VIDEO}" | cut -d' ' -f1)"

    if [ ! -f "${COLOR_VIDEO}" ]; then
        echo "❌ ERROR: Color video not found at ${COLOR_VIDEO}"
        exit 1
    fi
    echo "✓ Color video exists: $(ls -lh "${COLOR_VIDEO}" | awk '{print $5}')"
    echo "  MD5: $(md5sum "${COLOR_VIDEO}" | cut -d' ' -f1)"
    echo ""

    # Display and audio info
    echo "=== Display Information ==="
    tvservice -s 2>/dev/null || echo "tvservice not available"
    echo ""
    echo "=== Audio Devices ==="
    aplay -l 2>&1 | head -10 || echo "No ALSA devices"
    echo ""

    # VLC version
    echo "=== VLC Version ==="
    cvlc --version 2>&1 | head -5
    echo ""

    # Detect HDMI audio device dynamically
    echo "=== Detecting HDMI Audio Device ==="
    HDMI_DEVICE=$(/opt/hdmi-tester/detect-hdmi-audio)
    echo "Detected HDMI audio device: ${HDMI_DEVICE}"
    echo ""

    # Loop counter
    LOOP_COUNT=0

    # Loop forever with Raspberry Pi optimized flags using VLC
    while true; do
        LOOP_COUNT=$((LOOP_COUNT + 1))
        echo "==========================================="
        echo "Loop Iteration: ${LOOP_COUNT}"
        echo "Time: $(date '+%Y-%m-%d %H:%M:%S')"
        echo "==========================================="

        # System status
        echo "CPU Temp: $(vcgencmd measure_temp 2>/dev/null || echo 'N/A')"
        echo "Load: $(cat /proc/loadavg | cut -d' ' -f1-3)"
        echo "Memory Free: $(free -h | awk '/^Mem:/ {print $7}')"
        echo ""

        echo "[${LOOP_COUNT}] Playing: image-test.webm (optimized resolution with aspect ratio)..."
        echo "Start: $(date '+%Y-%m-%d %H:%M:%S.%N')"
        cvlc --play-and-exit --no-video-title-show --no-osd \
            --vout=drm --alsa-audio-device ${HDMI_DEVICE} \
            --no-audio-time-stretch --audio-replay-gain-mode=none -vv \
            "${IMAGE_VIDEO}" 2>&1
        echo "End: $(date '+%Y-%m-%d %H:%M:%S.%N')"
        echo ""

        echo "[${LOOP_COUNT}] Playing: color-test.webm (fullscreen stretched for pixel testing)..."
        echo "Start: $(date '+%Y-%m-%d %H:%M:%S.%N')"
        cvlc --play-and-exit --fullscreen --no-autoscale \
            --no-video-title-show --no-osd \
            --vout=drm --alsa-audio-device ${HDMI_DEVICE} \
            --no-audio-time-stretch --audio-replay-gain-mode=none -vv \
            "${COLOR_VIDEO}" 2>&1
        echo "End: $(date '+%Y-%m-%d %H:%M:%S.%N')"
        echo ""

        echo "Restarting loop (iteration ${LOOP_COUNT} complete)..."
        echo ""
        sleep 1
    done

} 2>&1 | tee "${LOG_FILE}"
